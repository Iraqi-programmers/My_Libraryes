<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:IQD_UI_Library"
                    >


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IQD_UI_Library;component/Styles/TextBoxes3D.xaml"/>
        <ResourceDictionary Source="/IQD_UI_Library;component/Themes/LightTheme.xaml"/>
        <ResourceDictionary Source="/IQD_UI_Library;component/Themes/DarkTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
  
    <!-- Start: Protextbox -->
    <Style x:Key="ProTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="textBoxBorder" CornerRadius="17"
                     Background="{TemplateBinding Background}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     SnapsToDevicePixels="True"
                     Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="textBoxBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="textBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlackColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Protextbox -->

    <!--Pasworsbox-->
    <Style x:Key="ProPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="passwordBoxBorder" CornerRadius="17"
                     Background="{TemplateBinding Background}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     SnapsToDevicePixels="True"
                     Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="passwordBoxBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="passwordBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlackColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Paswordbox-->


    <Style TargetType="{x:Type local:IQD_TextBox}">

        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="{Binding Width}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="Padding" Value="0 5 5 4"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Txtborder"
                      BorderBrush="{Binding BorderBrushing,RelativeSource={RelativeSource TemplatedParent}}"
                      BorderThickness="2"
                      CornerRadius="5"
                      SnapsToDevicePixels="True">

                        <Grid Margin="0 5 5 4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                    Focusable="False"
                                    Grid.Column="1"
                                    Margin=" 5 0 0 0"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden"/>

                            <Image Source="{Binding InnerBorderImage, RelativeSource={RelativeSource TemplatedParent}}"
                                    Stretch="Uniform" 
                                    Height="15"
                                    Margin="2 0 0 3" 
                                    ToolTip="Name"
                                    Cursor="Arrow"
                                   Grid.Column="0">

                            </Image>
                            
                            <Label x:Name="watermark"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Left"
                             Foreground="{StaticResource PrimaryTextColor}"
                             Visibility="Collapsed"
                             Padding="5 0 20 5"
                             Content="{TemplateBinding Tag}"
                             Grid.Column="1"/>
                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Orange" TargetName="Txtborder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="Orange" TargetName="Txtborder"/>
                            <Setter Property="BorderThickness" Value="0.5 0.5 0.5 3" TargetName="Txtborder"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property ="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="watermark"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>